import{p as k,k as d,o as I,i as L,t as b,b as j,l as q,a as n,d as z,g as o,m as v,f as c,e as C,r as E,q as f,u,v as m}from"./DUVIQDUP.js";var O=b('<div class="w-full h-32 bg-brand-primary/5 rounded-lg animate-pulse flex items-center justify-center"><div class="w-8 h-8 border-4 border-brand-primary/20 border-t-brand-primary rounded-full animate-spin"></div></div>'),V=b("<div><!></div>");function B(h,a){k(a,!1);let p=d(a,"rootMargin",8,"100px"),g=d(a,"threshold",8,.1),l=v(!1),s=v();I(()=>{if(!o(s))return;const e=new IntersectionObserver(r=>{r.forEach(t=>{t.isIntersecting&&(c(l,!0),e.disconnect())})},{rootMargin:p(),threshold:g()});return e.observe(o(s)),()=>e.disconnect()}),L();var i=V(),_=C(i);{var y=e=>{var r=f(),t=u(r);m(t,a,"default",{},null),n(e,r)},M=e=>{var r=f(),t=u(r);m(t,a,"placeholder",{},w=>{var x=O();n(w,x)}),n(e,r)};j(_,e=>{o(l)?e(y):e(M,!1)})}E(i),q(i,e=>c(s,e),()=>o(s)),n(h,i),z()}export{B as L};
